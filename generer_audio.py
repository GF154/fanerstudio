#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
G√©n√©rateur d'Audiobook - Pwoj√® Krey√≤l IA
"""

import sys
from pathlib import Path
from gtts import gTTS
from tqdm import tqdm

def generer_audio(texte, chemin_sortie, langue='fr'):
    """G√©n√©rer un fichier audio MP3 √† partir du texte"""
    print(f"\nüéß G√©n√©ration de l'audiobook...")
    print(f"   Texte: {len(texte)} caract√®res")
    print(f"   Langue: Fran√ßais (pour texte cr√©ole)")
    print(f"   Note: Le cr√©ole ha√Øtien sera prononc√© avec accent fran√ßais")
    print(f"   Sortie: {chemin_sortie}")
    print()
    
    try:
        # Cr√©er le dossier de sortie
        chemin_sortie.parent.mkdir(parents=True, exist_ok=True)
        
        # G√©n√©rer l'audio avec gTTS
        print("üì¢ Synth√®se vocale en cours...")
        
        # Utiliser une barre de progression factice
        with tqdm(total=100, desc="G√©n√©ration audio", unit="%") as pbar:
            pbar.update(20)
            
            # Cr√©er l'objet TTS avec accent fran√ßais pour le cr√©ole
            tts = gTTS(text=texte, lang=langue, slow=False, tld='com')
            pbar.update(40)
            
            # Sauvegarder le fichier
            tts.save(str(chemin_sortie))
            pbar.update(40)
        
        # V√©rifier la taille du fichier
        taille_ko = chemin_sortie.stat().st_size / 1024
        duree_estimee = len(texte) / 200  # Estimation: ~200 chars/minute
        
        print()
        print(f"‚úÖ Audiobook cr√©√© avec succ√®s!")
        print(f"   Fichier: {chemin_sortie}")
        print(f"   Taille: {taille_ko:.2f} Ko")
        print(f"   Dur√©e estim√©e: ~{duree_estimee:.1f} minutes")
        
        return True
    
    except Exception as e:
        print(f"‚ùå Erreur lors de la g√©n√©ration audio: {e}")
        return False


def lire_fichier_texte(chemin):
    """Lire un fichier texte"""
    try:
        with open(chemin, 'r', encoding='utf-8') as f:
            return f.read()
    except Exception as e:
        print(f"‚ùå Erreur de lecture: {e}")
        return None


def main():
    """Fonction principale"""
    print("="*60)
    print("üéß G√âN√âRATEUR D'AUDIOBOOK EN CR√âOLE HA√èTIEN")
    print("="*60)
    print()
    
    # V√©rifier les arguments
    if len(sys.argv) < 2:
        print("Usage: python generer_audio.py <fichier_texte_kreyol.txt>")
        print()
        print("Exemple:")
        print("  python generer_audio.py output/test_document/test_document_kreyol.txt")
        return 1
    
    fichier_texte = Path(sys.argv[1])
    
    # V√©rifier que le fichier existe
    if not fichier_texte.exists():
        print(f"‚ùå Fichier introuvable: {fichier_texte}")
        return 1
    
    print(f"üìñ Fichier source: {fichier_texte.name}")
    
    # Lire le texte
    print(f"üìÑ Lecture du texte cr√©ole...")
    texte = lire_fichier_texte(fichier_texte)
    
    if not texte:
        return 1
    
    print(f"‚úÖ Texte charg√©: {len(texte)} caract√®res")
    
    # G√©n√©rer le chemin de sortie
    nom_base = fichier_texte.stem.replace('_kreyol', '')
    dossier_sortie = fichier_texte.parent
    audio_path = dossier_sortie / f"{nom_base}_audio.mp3"
    
    # G√©n√©rer l'audio (utiliser 'fr' car gTTS ne supporte pas 'ht')
    if not generer_audio(texte, audio_path, langue='fr'):
        return 1
    
    # R√©sum√© final
    print("\n" + "="*60)
    print("‚úÖ AUDIOBOOK CR√â√â AVEC SUCC√àS!")
    print("="*60)
    print(f"üéß Fichier audio: {audio_path}")
    print()
    print("üí° Pour √©couter:")
    print(f"   - Double-cliquez sur le fichier")
    print(f"   - Ou utilisez votre lecteur audio pr√©f√©r√©")
    print("="*60)
    
    return 0


if __name__ == "__main__":
    try:
        exit_code = main()
        sys.exit(exit_code)
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  G√©n√©ration interrompue")
        sys.exit(130)
    except Exception as e:
        print(f"\n‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

