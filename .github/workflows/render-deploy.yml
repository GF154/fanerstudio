name: 🚀 Auto-Deploy to Render
run-name: Deploying Faner Studio to Render

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  validate:
    name: 🔍 Pre-deployment Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: 📦 Validate requirements.txt
        run: |
          if [ -f requirements.txt ]; then
            echo "✅ requirements.txt found"
            echo "📋 Dependencies:"
            cat requirements.txt
            
            # Check for security vulnerabilities
            pip install safety
            safety check -r requirements.txt --continue-on-error || echo "⚠️ Security warnings found"
          else
            echo "❌ requirements.txt not found"
            exit 1
          fi
      
      - name: 🔧 Check main.py syntax
        run: |
          if [ -f main.py ]; then
            echo "✅ main.py found"
            python -m py_compile main.py
            echo "✅ Syntax validation passed"
          else
            echo "❌ main.py not found"
            exit 1
          fi
      
      - name: 📊 Validation Summary
        if: success()
        run: |
          echo "✅ All validation checks passed!"
          echo "🚀 Ready for deployment"

  deploy:
    name: 🚀 Deploy to Render
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name != 'pull_request'
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Install Render CLI
        run: |
          echo "📥 Downloading Render CLI..."
          curl -fsSL https://github.com/render-oss/cli/releases/download/v1.1.0/cli_1.1.0_linux_amd64.zip -o render.zip
          
          echo "📦 Extracting..."
          unzip -q render.zip
          
          echo "⚙️ Installing..."
          sudo mv cli_v1.1.0 /usr/local/bin/render
          sudo chmod +x /usr/local/bin/render
          
          echo "✅ Render CLI installed successfully"
          render --version
      
      - name: 🚀 Trigger Render Deploy
        run: |
          # Validate secrets
          if [ -z "$API_KEY" ] || [ -z "$SERVICE_ID" ]; then
            echo "❌ Error: RENDER_API_KEY or RENDER_SERVICE_ID not set"
            echo ""
            echo "📝 To fix this:"
            echo "  1. Go to: https://github.com/$REPO/settings/secrets/actions"
            echo "  2. Add RENDER_API_KEY (from https://dashboard.render.com/u/settings)"
            echo "  3. Add RENDER_SERVICE_ID (from your service URL: srv-xxxxx)"
            exit 1
          fi
          
          echo "🎯 Starting deployment..."
          echo "📦 Repository: $REPO"
          echo "🔀 Branch: $BRANCH"
          echo "📝 Commit: $COMMIT"
          echo "👤 Author: $AUTHOR"
          echo ""
          
          # Trigger deployment
          echo "🚀 Deploying to Render service: $SERVICE_ID"
          if render deploys create "$SERVICE_ID" --output json --confirm; then
            echo ""
            echo "✅ Deployment triggered successfully!"
          else
            echo ""
            echo "❌ Deployment command failed"
            echo "💡 Possible reasons:"
            echo "  - Invalid API key or Service ID"
            echo "  - Network issues"
            echo "  - Render service down"
            exit 1
          fi
        env:
          API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}
          AUTHOR: ${{ github.actor }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      
      - name: ⏳ Wait for deployment
        run: |
          echo "⏳ Waiting for deployment to complete..."
          echo "This may take 2-5 minutes..."
          sleep 30
          echo "✅ Initial deployment phase completed"
      
      - name: 🏥 Health Check
        continue-on-error: true
        run: |
          echo "🏥 Performing health check..."
          
          # Try to get the service URL (if available via environment)
          if [ ! -z "$SERVICE_URL" ]; then
            echo "🌐 Testing: ${SERVICE_URL}/health"
            
            # Wait a bit more for service to be ready
            sleep 20
            
            # Attempt health check
            for i in {1..5}; do
              echo "Attempt $i/5..."
              if curl -f -s "${SERVICE_URL}/health" > /dev/null; then
                echo "✅ Health check passed!"
                curl -s "${SERVICE_URL}/health" | jq '.' || true
                break
              else
                echo "⏳ Service not ready yet, waiting..."
                sleep 10
              fi
            done
          else
            echo "ℹ️ RENDER_SERVICE_URL not configured, skipping automated health check"
          fi
        env:
          SERVICE_URL: ${{ secrets.RENDER_SERVICE_URL }}
      
      - name: 📊 Deployment Success
        if: success()
        run: |
          echo ""
          echo "════════════════════════════════════════════"
          echo "🎉 Deployment Completed Successfully!"
          echo "════════════════════════════════════════════"
          echo ""
          echo "📍 Render Dashboard:"
          echo "   https://dashboard.render.com"
          echo ""
          echo "🔗 Service Details:"
          echo "   https://dashboard.render.com/web/$SERVICE_ID"
          echo ""
          echo "📝 Deployment Info:"
          echo "   Repository: $REPO"
          echo "   Branch: $BRANCH"
          echo "   Commit: $COMMIT"
          echo "   Author: $AUTHOR"
          echo "   Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo ""
          echo "════════════════════════════════════════════"
        env:
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}
          AUTHOR: ${{ github.actor }}
      
      - name: 🔔 Notify on Failure
        if: failure()
        run: |
          echo ""
          echo "════════════════════════════════════════════"
          echo "❌ Deployment Failed!"
          echo "════════════════════════════════════════════"
          echo ""
          echo "🔍 Troubleshooting steps:"
          echo "  1. Check the logs above for specific errors"
          echo "  2. Verify secrets are correctly set"
          echo "  3. Check Render dashboard for service status"
          echo "  4. Review recent code changes"
          echo ""
          echo "📚 Helpful links:"
          echo "   GitHub Actions: $SERVER_URL/$REPO/actions/runs/$RUN_ID"
          echo "   Render Dashboard: https://dashboard.render.com"
          echo ""
          echo "════════════════════════════════════════════"
        env:
          SERVER_URL: ${{ github.server_url }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}

